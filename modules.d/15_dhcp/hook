#!/bin/bash
# Read the global Vlans variable
if [ -f /etc/zfsUnlocker/zfsUnlocker.conf ]
then
  . /etc/zfsUnlocker/zfsUnlocker.conf
fi

function hook {
  # Figure out if there are any interfaces with a master who shouldn't be directly DHCP'd on.

  for interface in $(find /sys/class/net/ -type l -not -name '*.*' -not -name lo)
    do
      intbasename=$(basename $interface)
      [ ! -h ${interface} ]      && continue # Ignore non-symlinks
      [ -h ${interface}/master ] && continue # Ignore non-master links

      echo -e "\t\tAdded to dhclient interface list: ${intbasename}"
      echo "interface\"${intbasename}\" {}" >> /etc/dhclient.conf

      if [ -n "${Vlans[*]}" ]
      then
        for vlan in ${Vlans[*]}
        do
          vlanIntName="${intbasename}.${vlan}"
          ip link add link ${intbasename} ${vlanIntName} type vlan id ${vlan} && \
          echo -e "\t\t\tCreated and added vlan interface: ${vlanIntName}"
          echo "interface\"${vlanIntName}\" {}" >> /etc/dhclient.conf
        done
      fi

    done
    echo ""

  if dhclient $forceInterface -v >/dev/null 2>&1
  then
    if [ -f '/var/lib/dhclient/dhclient.leases' ]
    then
      myAddress="$(grep -m1 -o 'fixed-address.*' /var/lib/dhclient/dhclient.leases |grep -Eo '([0-9]+|\.)+')"
      [ -n "$myAddress" ] && echo -e "\t\tGot address $myAddress"
    fi
  else
    echo -e "\t\tCouldn't get an IP, manual unlock may be required."
  fi

}

function cleanup {
  set -x
  # Release the lease
  dhclient -r >/dev/null 2>&1


  if [ -n "${Vlans[*]}" ]
  then
    for interface in $(find /sys/class/net/ -type l -not -name '*.*' -not -name lo)
    do
      intbasename=$(basename $interface)
      for vlan in ${Vlans[*]}
      do
        vlanIntName="${intbasename}.${vlan}"
        ip link del ${vlanIntName} && echo "Deleting Vlan interface: ${vlanIntName}"
      done
    done
  fi
}

$1
