map add_binary wpa_supplicant \
               find \
               killall

map add_module ccm

function add_wificard {

  map add_module $driver mac80211 # Always add the core driver plus mac80211

    # Special cases for certain drivers
  if [ "$driver" == "iwlwifi" ]
  then
    echo -e "\t$busPath is an iwlwifi card, also adding iwlmvm"
    map add_module iwlmvm

    echo -e "\tScanning journalctl for modules iwlwifi has used this boot..."

    activeFirmwareList=$(journalctl --boot|grep -o 'iwlwifi.*loaded firmware version.*ucode' | awk -F' ' '{print $NF}' | sort -u | tr '\n' ' ')

    for iwlwifi_firmware_file in $activeFirmwareList
    do
      echo -e "\tDetected ${iwlwifi_firmware_file} in use, adding to initramfs for next boot."
      map add_file /usr/lib/firmware/iwlwifi-${iwlwifi_firmware_file}*
    done
  fi
}

# Main loop to search for wifi devices
while read pci_wireless_controller
do
  if [ -n "$pci_wireless_controller" ]
  then
    busPath="$(cut -f1 -d' ' <<< $pci_wireless_controller)"
    busPathEscaped="$(sed 's/:/\\:/g' <<< $busPath)"
    vendorClass="$(grep -Eo '[0-9a-z]{4}:[0-9a-z]{4}' <<< $pci_wireless_controller)"
    vendor="$(cut -f1 -d : <<< $vendorClass)" ; class="$(cut -f2 -d : <<< $vendorClass)"
    driver="$(basename $(readlink /sys/bus/pci/devices/${busPath}/driver))"

    echo -e "\tFound $vendorClass at path $busPath using driver $driver"
    add_wificard

  fi



done <<< "$(grep -Ei '(Wi(-)?Fi|Wireless)' <<< $(lspci -D -nn))"

echo -e ""
